# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2017-01-29 05:49
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import smart_selects.db_fields


class Migration(migrations.Migration):

    dependencies = [
        ('competitions', '0010_auto_20170128_2349'),
        ('leagues', '0010_auto_20170128_2349'),
        ('profile', '0011_auto_20170128_2349'),
        ('invitations', '0003_auto_20151126_1523'),
    ]

    operations = [
        migrations.AddField(
            model_name='competition',
            name='creator',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='profile.PlayerProfile'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='competition',
            name='matchup_type',
            field=models.IntegerField(choices=[(1, 'individual'), (2, 'team')], default=1),
        ),
        migrations.AddField(
            model_name='competition',
            name='name',
            field=models.CharField(default='name', max_length=30, validators=[django.core.validators.RegexValidator('^[-\\s\\.\\w\\d]{1,30}$')]),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='competition',
            name='players_per_team',
            field=models.IntegerField(blank=True, choices=[(2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31), (32, 32)], null=True),
        ),
        migrations.AddField(
            model_name='competition',
            name='split_teams',
            field=models.IntegerField(blank=True, choices=[(1, 'random'), (2, 'manual')], null=True),
        ),
        migrations.AlterField(
            model_name='competition',
            name='league',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='competitions', to='leagues.League'),
        ),
        migrations.AlterField(
            model_name='competition',
            name='parent',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='olympic_events', to='competitions.Competition'),
        ),
        migrations.AlterField(
            model_name='competition',
            name='status',
            field=models.IntegerField(choices=[(0, 'inactive'), (1, 'active')], default=0),
        ),
        migrations.AlterField(
            model_name='matchup',
            name='competition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matchups', to='competitions.Competition'),
        ),
        migrations.AlterField(
            model_name='matchup',
            name='tourney_round',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tourney_matchups', to='competitions.TourneyRound'),
        ),
        migrations.AlterField(
            model_name='matchup',
            name='witness',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='witness', to='profile.PlayerProfile'),
        ),
        migrations.AlterField(
            model_name='series',
            name='tourney_round',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tourney_series', to='competitions.TourneyRound'),
        ),
        migrations.DeleteModel(
            name='CompetitorInfo',
        ),
        migrations.DeleteModel(
            name='MatchupMember',
        ),
        migrations.DeleteModel(
            name='SubTeam',
        ),
        migrations.AlterUniqueTogether(
            name='statmember',
            unique_together=set([('parent_id', 'parent_type', 'child_id', 'child_type')]),
        ),
        migrations.AddField(
            model_name='matchupcompetitor',
            name='competitor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='matchup_competitors', to='competitions.Competitor'),
        ),
        migrations.AddField(
            model_name='matchupcompetitor',
            name='matchup',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competitions.Matchup'),
        ),
        migrations.AddField(
            model_name='competitorseed',
            name='competition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seeds', to='competitions.Competition'),
        ),
        migrations.AddField(
            model_name='competitorseed',
            name='competitor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seeds', to='competitions.Competitor'),
        ),
        migrations.AddField(
            model_name='competitor',
            name='captain',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='competition_team_captain', to='profile.PlayerProfile'),
        ),
        migrations.AddField(
            model_name='competitor',
            name='competition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competitors', to='competitions.Competition'),
        ),
        migrations.AddField(
            model_name='competitor',
            name='players',
            field=models.ManyToManyField(related_name='competitors', to='profile.PlayerProfile'),
        ),
        migrations.AddField(
            model_name='competitor',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competition_teams', to='leagues.Team'),
        ),
        migrations.AddField(
            model_name='competitionsignuppage',
            name='Competition',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='signup_page', to='competitions.Competition'),
        ),
        migrations.AddField(
            model_name='competitioninvite',
            name='competition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invites', to='competitions.Competition'),
        ),
        migrations.AddField(
            model_name='competitioninvite',
            name='invite',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pending_invites', to='invitations.Invitation'),
        ),
        migrations.AddField(
            model_name='competitioninvite',
            name='player',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='competition_invites', to='profile.PlayerProfile'),
        ),
        migrations.AddField(
            model_name='competitioninvite',
            name='team',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='competition', chained_model_field='competition', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='competitor_invites', to='competitions.Competitor'),
        ),
        migrations.AddField(
            model_name='boxstat',
            name='stat_member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competitions.StatMember'),
        ),
        migrations.AddField(
            model_name='matchup',
            name='competitors',
            field=models.ManyToManyField(related_name='matchups', through='competitions.MatchupCompetitor', to='competitions.Competitor'),
        ),
        migrations.AddField(
            model_name='series',
            name='competitors',
            field=models.ManyToManyField(to='competitions.Competitor'),
        ),
        migrations.AddField(
            model_name='tournament',
            name='competitors',
            field=models.ManyToManyField(to='competitions.Competitor'),
        ),
        migrations.AlterUniqueTogether(
            name='matchupcompetitor',
            unique_together=set([('matchup', 'competitor', 'dependent_outcome', 'dependent_type', 'dependent_id', 'seed')]),
        ),
        migrations.AlterUniqueTogether(
            name='competitorseed',
            unique_together=set([('competition', 'seed')]),
        ),
        migrations.AlterUniqueTogether(
            name='competitor',
            unique_together=set([('competition', 'team')]),
        ),
        migrations.AlterUniqueTogether(
            name='competitioninvite',
            unique_together=set([('competition', 'player')]),
        ),
    ]
